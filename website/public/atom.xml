<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Locutus</title>
  <subtitle>We&#39;re assimilating other languages&#39; standard libraries to JavaScript for fun and educational purposes</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://locutusjs.io/"/>
  <updated>2016-05-01T20:48:20.000Z</updated>
  <id>http://locutusjs.io/</id>
  
  <author>
    <name>Kevin van Zonneveld</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php.js is Dead - Long Live Locutus</title>
    <link href="http://locutusjs.io/2016/04/announcing-locutus/"/>
    <id>http://locutusjs.io/2016/04/announcing-locutus/</id>
    <published>2016-04-21T00:00:00.000Z</published>
    <updated>2016-05-01T20:48:20.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;Add note about issues &amp;amp; PRs&lt;/li&gt;
&lt;li&gt;Add note about website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As briefly spoiled in &lt;a href=&quot;/blog/2016/04/20/breaking-bc/&quot;&gt;Breaking Backwards Compatibility&lt;/a&gt;,&lt;br&gt;today I’m launching a big iteration of php.js. It includes so&lt;br&gt;&lt;a href=&quot;https://github.com/kvz/locutus/pull/290&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;many&lt;/a&gt; breaking&lt;br&gt;&lt;a href=&quot;https://github.com/kvz/locutus/blob/master/CHANGELOG.md#v200&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;changes&lt;/a&gt;, that after&lt;br&gt;9 years, php.js is dead. Out of its ashes though, rises: &lt;strong&gt;Locutus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Locutus will have the same mission: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Offer a community platform to collaborate on JavaScript counterparts&lt;br&gt;to functions from other languages, for fun and educational purposes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But Locutus will also be different on key points. Locutus will focus on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expanding to other languages, such as C, Go, Python, Ruby&lt;/li&gt;
&lt;li&gt;Hack-free porting, meaning we’ll just port individual functions from the standard libraries and avoid: language features, environment, data-types, configuration&lt;/li&gt;
&lt;li&gt;The educational aspect and the intellectual challenge&lt;/li&gt;
&lt;li&gt;Using npm as the distribution platform of choice, so you can do &lt;code&gt;var strings = require(&amp;#39;golang/strings&amp;#39;)&lt;/code&gt;and in case the browser is your target platform, use &lt;a href=&quot;http://browserify.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Browserify&lt;/a&gt;, &lt;a href=&quot;http://rollupjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rollup.js&lt;/a&gt;, or &lt;a href=&quot;https://webpack.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;webpack&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Trying to deliver functions that are interoperable browsers and Node.js, but allowing to target just one platform when that saves us from writing wieldy code, documenting this with a &lt;code&gt;note&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While still a work in progress, I’ve already deprecated and updated many functions that do not adhere to this renewed focus. If you spot a function I overlooked, let me know and we’ll fix.&lt;/p&gt;
&lt;p&gt;I feel these changes were needed to regain the motivation required for leading this project. For a long time I’ve struggled with it in its old form. I rarely did maintenance runs anymore, and when I did, it was guilt-driven, rather than by curiosity or excitement - the things that got me started.&lt;/p&gt;
&lt;p&gt;There are several reasons why I believe my intrinsic motivation had fled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The things that could reasonably be ported, had been ported. The things that probably should not have been ported, had been ported too - and were now mostly good for provoking purists and inducing maintenance load. Not very rewarding.&lt;/li&gt;
&lt;li&gt;Misuse of the project. I shed approximately 451 tears when people started using our project so they would not have to learn JavaScript and could continue PHP-ing in the browser, using 2.1MB, 451-function, ready-to-rock spaceship bundles in the browser. I made efforts to &lt;a href=&quot;/blog/2013/05/a-word-on-the-focus-of-php-dot-js/&quot;&gt;stop newcomers from doing that&lt;/a&gt;. I shed approximately 2.1 tears from the angry notes they then sent me.&lt;/li&gt;
&lt;li&gt;I started a new company and protocol which took much time by itself, but also meant writing solely in other programming languages (you’ll find no bitterness here, but it did mean I had less time to care about PHP oriented projects)&lt;/li&gt;
&lt;li&gt;Being a visible project in the broader development community with people coming from many different programming languages, I found myself at the focal point of PHP hate was fashionable for a while.   &lt;/li&gt;
&lt;li&gt;9 years is a long time, especially in tech. Node.js did not exist, &lt;a href=&quot;https://www.w3counter.com/globalstats.php?date=2007-05-30&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;everyone was on IE6&lt;/a&gt;, and JavaScript was mostly used for raising &lt;code&gt;alert()&lt;/code&gt;s. Going from age 23 to 32, I have changed my stance on pretty much all things. This includes also that I have abandoned the idea that our project could maybe be used as an interactive debugging tool, or maybe even to run entire scripts from other languages on V8. I pursued goal for some time with the thirst of a youngster, and while we had some success with this, it drove me to me write and accept hacks that have likely secured my special place in hell. Projects like &lt;a href=&quot;https://github.com/gopherjs/gopherjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GopherJS&lt;/a&gt; or &lt;a href=&quot;http://kripken.github.io/emscripten-site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emscripten&lt;/a&gt; offer viable routes to that end, our approach isn’t fit for that purpose.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Knowing I fell short as a project lead, I tried to recruit fresh blood to replace me. However, even though there is an active community of contributors, there were no volunteers for this position. For a while I considered declaring &lt;code&gt;[UNMAINTAINED]&lt;/code&gt;, but I still feel too great a deal of duty and responsibility towards the contributors.&lt;/p&gt;
&lt;p&gt;So instead I thought what it would take to get my mojo back. Having analyzed&lt;br&gt;what had crippled it over the past 9 years, I decided to make the changes that allow it to flow&lt;br&gt;back again.&lt;/p&gt;
&lt;p&gt;If you are interested in the nuts and bolts, these these are a few things I’ve been secretly&lt;br&gt;working on to clean up our codebase and breathe new live into it. I have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added (generated) Mocha tests for every functions, instead of our own test framework&lt;/li&gt;
&lt;li&gt;Added a CONTRIBUTORS guide as well as New Issue and Pull Request templates so we can be more efficient using GitHub&lt;/li&gt;
&lt;li&gt;Added native JSON, base64, sha1, md5 support when available&lt;/li&gt;
&lt;li&gt;Asked &lt;a href=&quot;http://troydodd.deviantart.com/art/Locutus-of-Borg-217586598&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Troy Dodd&lt;/a&gt; if we could use his stunning Locutus artwork to be our avatar (and he said yes : )&lt;/li&gt;
&lt;li&gt;Assimilated a dozen of example functions that showcase how we could port 4 new languages to JavaScript&lt;/li&gt;
&lt;li&gt;Changed all functions to make them adhere to the &lt;a href=&quot;http://standardjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript Standard Style&lt;/a&gt; and have a max line length of 100. Travis CI will fail when new additions do not adhere&lt;/li&gt;
&lt;li&gt;Deprecated/documented all functions using &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;new Function&lt;/code&gt; and other bad practices&lt;/li&gt;
&lt;li&gt;Fixed ~50 failed tests that were previously marked as skipped (still a few to go)&lt;/li&gt;
&lt;li&gt;Made it so that all functions can be required individually via npm&lt;/li&gt;
&lt;li&gt;Made it so that dependencies between functions are now handled via CommonJS &lt;code&gt;require&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Refactored the utility class&lt;/li&gt;
&lt;li&gt;Removed &lt;code&gt;_workbench&lt;/code&gt; and &lt;code&gt;_experimental&lt;/code&gt; folders. They are available for reference in 1.3.2 but making them harder to find for newcomers should help avoid complaints and confusion. If you want to experiment, we can use local files or branches for that when it’s time to collaborate.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;/blog/2016/04/jekyll/&quot;&gt;Jekyll instead of Octopress&lt;/a&gt; to build our website&lt;/li&gt;
&lt;li&gt;We can use &lt;code&gt;$global&lt;/code&gt; that works in both Browsers and Node.js&lt;/li&gt;
&lt;li&gt;We can write any function in ES6 now&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I understand this can feel like a very radical shift, especially when there’s talk of deprecating functions. Perhaps functions that you wrote with blood sweat and tears. I want to voice a word of appreciation to you as a contributor, for the hard work that went into crafting this project. Rewriting a language in another language is no small task, and folks tend to forget that in order to port a different language to JavaScript, we had to write a lot of JavaScript. &lt;/p&gt;
&lt;p&gt;In trying to port the entire language instead of limiting ourselves to more sensible bits, we may have ventured into some darker areas of engineering. But I for one am very proud that we have built a welcoming and friendly community where over the coarse of 9 years, over hundreds of developers have come together to learn JavaScript and help others learn it. I for one have become much more intimate with JavaScript’s delicacies because of it, and I know many contributors commenting on eat-other’s work, with me. I will accept both victory and defeat.&lt;/p&gt;
&lt;p&gt;As a contributor of this project, I hope Locutus brings the changes that can re-spark your interest as well as it has mine, and I hope you’ll come with me on this new adventure, where standard libraries full of functions are just &lt;a href=&quot;https://golang.org/pkg/strings/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;screaming to be ported&lt;/a&gt;. This time we’ll be a little bit older. A little bit wiser, prudent, and steer clear of the darker areas. But we’ll have just as much fun challenging ourselves and learning other languages : )&lt;/p&gt;
&lt;p&gt;For all those that can forgive me for my past mistakes, as well as perhaps deprecating some of your work: you can try Locutus right now if you want:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install --save --save-exact locutus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vim index.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; echo = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;locutus/php/strings/echo&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; capwords = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;locutus/python/string/capwords&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; strings = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;locutus/golang/strings&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rubyMath = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;locutus/ruby/Math&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;locutus/c&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo(capwords(&lt;span class=&quot;string&quot;&gt;&#39;locutus&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo(strings.Contains(&lt;span class=&quot;string&quot;&gt;&#39;Locutus&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;us&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo(rubyMath.acos(&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo(c.math.abs(&lt;span class=&quot;number&quot;&gt;-5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Locutus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.266103672779499&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you want to help Locutus, our newly added languages don’t have much meat on the bones yet, so it would be glorious to see you could assimilate more functions.&lt;/p&gt;
&lt;p&gt;Also, there are plenty ideas in our&lt;br&gt;&lt;a href=&quot;https://github.com/kvz/locutus/blob/master/CHANGELOG.md#Backlog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Backlog&lt;/a&gt;&lt;br&gt;that we’d love help with, so there’s just one thing left to say.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kvz/locutus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;To the GitHubs&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Add note about issues &amp;amp; PRs&lt;/li&gt;
&lt;li&gt;Add note about website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As briefly spoiled in &lt;a href=&quot;/blog/2016/04/20/break
    
    </summary>
    
    
      <category term="future" scheme="http://locutusjs.io/tags/future/"/>
    
      <category term="js" scheme="http://locutusjs.io/tags/js/"/>
    
      <category term="golang" scheme="http://locutusjs.io/tags/golang/"/>
    
      <category term="python" scheme="http://locutusjs.io/tags/python/"/>
    
      <category term="ruby" scheme="http://locutusjs.io/tags/ruby/"/>
    
      <category term="php" scheme="http://locutusjs.io/tags/php/"/>
    
      <category term="c" scheme="http://locutusjs.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Breaking Backwards Compatibility</title>
    <link href="http://locutusjs.io/2016/04/breaking-bc/"/>
    <id>http://locutusjs.io/2016/04/breaking-bc/</id>
    <published>2016-04-20T00:00:00.000Z</published>
    <updated>2016-05-01T10:50:57.000Z</updated>
    
    <content type="html">&lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;I’m planning to push out a big release soon that will change a lot of things about this project.&lt;/p&gt;
&lt;p&gt;Among things, it will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Offer a platform to learn other languages besides PHP&lt;/li&gt;
&lt;li&gt;Be focussed on npm as the main distribution platform, so you can &lt;code&gt;var sprintf = require(&amp;#39;string/sprintf&amp;#39;)&lt;/code&gt; (and use Browserify, Rollup, or Webpack on that if the browser is your target)&lt;/li&gt;
&lt;li&gt;Deprecate functions that were desperately trying to mimic PHP, yet never really succeeding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The old version will remain available as &lt;code&gt;v1.3.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I certainly hope you are not using this project like so:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;as that is asking for BC breakage as well as impolite towards GitHub, but if you are, you should change your links to&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;until you can figure out how to vendor in that function and host it yourself.&lt;/p&gt;
&lt;p&gt;If you are using the project via npm, the old version will be available under the &lt;code&gt;1.3.2&lt;/code&gt; package version.&lt;/p&gt;
&lt;p&gt;If you are using it via Git, use &lt;code&gt;git checkout v1.3.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The new version will be available as &lt;code&gt;v2.0.0&lt;/code&gt;, as well as &lt;code&gt;master&lt;/code&gt; by the time I launch. I’m not sure yet when that will be, but I thought it might save some headaches to already give the heads up about this.&lt;/p&gt;
&lt;p&gt;Stay tuned for more,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;I’m planning to push out a big release soon that will change a lot of things about this project.&lt;/p&gt;
&lt;p&gt;Among things, it w
    
    </summary>
    
    
      <category term="future" scheme="http://locutusjs.io/tags/future/"/>
    
  </entry>
  
  <entry>
    <title>Switching to Jekyll</title>
    <link href="http://locutusjs.io/2016/04/jekyll/"/>
    <id>http://locutusjs.io/2016/04/jekyll/</id>
    <published>2016-04-02T00:00:00.000Z</published>
    <updated>2016-05-01T10:52:26.000Z</updated>
    
    <content type="html">&lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://locutusjs.io/blog/2012/09/new-site/&quot;&gt;Four years ago&lt;/a&gt; we switched from a PHP generated site to&lt;br&gt;one built in Octopress, so it would be easier for people to contribute, and we would not have to worry&lt;br&gt;about keeping servers online.&lt;/p&gt;
&lt;p&gt;Things have changed since then. The Octopress version we used is no longer supported, and the new&lt;br&gt;3.0 is leans heavily on Jekyll.&lt;/p&gt;
&lt;p&gt;With the backing of GitHub for GitHub Pages, Jekyll itself has improved tremendously. &lt;/p&gt;
&lt;p&gt;Combined, I felt we reached the tipping point where it made more sense to port things to Jekyll&lt;br&gt;so we can profit from their speed of development, ecosystem, and the fact that many developers&lt;br&gt;are already familiar with it.&lt;/p&gt;
&lt;p&gt;Long story short, I just &lt;a href=&quot;https://github.com/kvz/locutus/pull/284&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;completed&lt;/a&gt; the migration, and if you want to work on the website, here’s&lt;br&gt;what you’d do.&lt;/p&gt;
&lt;p&gt;Jekyll runs on Ruby, so make sure you have that installed, preferably with a working version of bundler. The rest of the site-building dependencies are node-based, so make sure you have a working &lt;code&gt;npm&lt;/code&gt; as well.&lt;/p&gt;
&lt;p&gt;To install the dependencies:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm run website:install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To start a local version of the website and open a browser that will auto-refresh on changes, type:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm run website:start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now hack on the files in the &lt;code&gt;./website&lt;/code&gt; folder, until you’re happy with the local results. Commit the changes to Git or send in a PR if you don’t have write access to the repository. This means the sources are saved, but someone with write access still needs to deploy.&lt;/p&gt;
&lt;p&gt;To do that, type:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm run website:deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;That’s it : )&lt;/p&gt;
&lt;p&gt;P.S. We have a few custom build steps such as rendering the functions, that make it hard for us to only use the GitHub Pages provided Jekyll, this means for the time being we’ll be relying on our own scripts and Jekyll version. That said, it’s still possible to orchestrate auto-deploys whenever there’s a change to &lt;code&gt;master&lt;/code&gt;, by using Travis CI and encrypted environment keys. If I have time, I’d like to set this up too. This way people could propose changes, and merging them would be enough to see them go live.&lt;/p&gt;
&lt;p&gt;Best wishes,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hi all,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://locutusjs.io/blog/2012/09/new-site/&quot;&gt;Four years ago&lt;/a&gt; we switched from a PHP generated site to&lt;br&gt;one bu
    
    </summary>
    
    
      <category term="website" scheme="http://locutusjs.io/tags/website/"/>
    
      <category term="octopress" scheme="http://locutusjs.io/tags/octopress/"/>
    
      <category term="future" scheme="http://locutusjs.io/tags/future/"/>
    
      <category term="jekyll" scheme="http://locutusjs.io/tags/jekyll/"/>
    
  </entry>
  
  <entry>
    <title>Standard Coding Style</title>
    <link href="http://locutusjs.io/2016/04/standard-coding-style/"/>
    <id>http://locutusjs.io/2016/04/standard-coding-style/</id>
    <published>2016-04-01T00:00:00.000Z</published>
    <updated>2016-05-01T10:52:44.000Z</updated>
    
    <content type="html">&lt;p&gt;Three years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide,&lt;br&gt;for reasons outlined in the introductory post: &lt;a href=&quot;/blog/2013/05/coding-style/&quot;&gt;Coding Style&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The reasoning behind adopting such a widely supported coding style, has not changed. Locutus should be&lt;br&gt;focused on its added value, and less so arguing about, and inventing custom conventions around coding style.&lt;/p&gt;
&lt;p&gt;What has changed a great deal though, is the JavaScript landscape. A large part of the community is gathering behind &lt;a href=&quot;http://standardjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Feross Aboukhadijeh’s JavaScript Standard Style&lt;/a&gt; and &lt;a href=&quot;http://eslint.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ESLint&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Standard offers sensible defaults (no semicolons might take some getting used to but it’s really &lt;a href=&quot;http://mislav.net/2010/05/semicolons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ok&lt;/a&gt; and after two weeks you won’t look back). ESLint offers powerful ways to enforce the standard.&lt;/p&gt;
&lt;p&gt;ESLint for instance, offers a &lt;code&gt;--fix&lt;/code&gt; command-line argument flag, that converts non-conforming codebases to whichever coding style convention was selected.&lt;/p&gt;
&lt;p&gt;The auto-fixing does not cover all rules yet, but it’s getting better every month. As we upgrade these modules and fix our codebase, more and more legacy will conform.&lt;/p&gt;
&lt;p&gt;Additionally, I’ve added non-fatal linting to our Travis CI builds, so you can see which functions don’t comply, and make them.&lt;/p&gt;
&lt;p&gt;Locutus does few naughty tricks to bend the laws of physics and overcome a few obstacles in porting programming languages. For this reason, Locutus a few exceptions listed in &lt;code&gt;.eslintrc&lt;/code&gt;. As a goal for the future, it would be interesting to see if we could lose these exceptions.&lt;/p&gt;
&lt;p&gt;Best wishes,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Three years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide,&lt;br&gt;for reasons outlined in the
    
    </summary>
    
    
      <category term="coding style" scheme="http://locutusjs.io/tags/coding-style/"/>
    
      <category term="convention" scheme="http://locutusjs.io/tags/convention/"/>
    
  </entry>
  
  <entry>
    <title>Coding Style</title>
    <link href="http://locutusjs.io/2013/05/coding-style/"/>
    <id>http://locutusjs.io/2013/05/coding-style/</id>
    <published>2013-05-04T00:00:00.000Z</published>
    <updated>2016-05-01T10:53:22.000Z</updated>
    
    <content type="html">&lt;p&gt;Given &lt;a href=&quot;/blog/2013/05/a-word-on-the-focus-of-php-dot-js/&quot;&gt;the focus of Locutus&lt;/a&gt; I think&lt;br&gt;we should re-invent as few wheels as possible and make use of sensible tools&lt;br&gt;and standards that are other people have already invested a great deal of time&lt;br&gt;in to get right.&lt;/p&gt;
&lt;p&gt;In this light, I’ve decided to adopt &lt;a href=&quot;http://nodeguide.com/style.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Felix’ Node.js Style Guide&lt;/a&gt;&lt;br&gt;for coding standards, instead of running our own.&lt;/p&gt;
&lt;p&gt;It saves us time maintaining and it becomes easier for people to contribute because&lt;br&gt;they don’t have to memorize where Locutus diverges.&lt;/p&gt;
&lt;p&gt;For the big parts our codebase is already compatible with it, so&lt;br&gt;we won’t get any weird &lt;a href=&quot;http://www.emacswiki.org/pics/static/TabsSpacesBoth.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;space + tab&lt;/a&gt; indentations as a result, as we start adding code that follows the guide.&lt;/p&gt;
&lt;p&gt;Going forward, contributions should comply with these conventions before being&lt;br&gt;merged in.&lt;/p&gt;
&lt;p&gt;Best wishes,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Given &lt;a href=&quot;/blog/2013/05/a-word-on-the-focus-of-php-dot-js/&quot;&gt;the focus of Locutus&lt;/a&gt; I think&lt;br&gt;we should re-invent as few wheels as
    
    </summary>
    
    
      <category term="coding style" scheme="http://locutusjs.io/tags/coding-style/"/>
    
      <category term="convention" scheme="http://locutusjs.io/tags/convention/"/>
    
  </entry>
  
  <entry>
    <title>A Word on the Focus of php.js</title>
    <link href="http://locutusjs.io/2013/05/a-word-on-the-focus-of-php-dot-js/"/>
    <id>http://locutusjs.io/2013/05/a-word-on-the-focus-of-php-dot-js/</id>
    <published>2013-05-03T00:00:00.000Z</published>
    <updated>2016-05-01T10:54:04.000Z</updated>
    
    <content type="html">&lt;p&gt;Hi everybody,&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;/blog/2012/09/26/new-site/&quot;&gt;new site&lt;/a&gt; has no server-side code. Instead&lt;br&gt;we generate HTML &lt;a href=&quot;http://kvz.io/blog/2012/09/25/blog-with-octopress/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;using Octopress&lt;/a&gt;&lt;br&gt;and push to GitHub Pages, all from one &lt;a href=&quot;https://github.com/kvz/locutus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This saves hosting costs/overhead and makes it really easy for people to submit&lt;br&gt;pull requests and for &lt;a href=&quot;https://github.com/kvz/locutus/contributors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;contributors&lt;/a&gt;&lt;br&gt;to make changes that I don’t always have time&lt;br&gt;for. It makes the project less dependent on me and more a community effort.&lt;/p&gt;
&lt;p&gt;To move forward, sometimes you have to cut features.&lt;br&gt;In this case I had to lose our compiler, a webtool that relied on server-side code&lt;br&gt;to generate minified packages from php.js functions.&lt;/p&gt;
&lt;p&gt;Understandibly this has &lt;a href=&quot;https://github.com/kvz/locutus/issues/75&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raised&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://locutusjs.io/about/index.html#comment-861825612&quot;&gt;questions&lt;/a&gt;.&lt;br&gt;It is still possible to bundle 4 useful functions:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# - Note that this combined 4 php.js functions into a file called: myLocutus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# and minified version: myphp.min.js in the current directory.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# - Note that this throws all functions into the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# global scope. It would be better to put them in a dedicated locutus object.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -sk https://raw.github.com/kvz/locutus/31bf3129f08672f8c1d6d0dcad2368ebc4ac57f2/&lt;span class=&quot;built_in&quot;&gt;functions&lt;/span&gt;/\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;datetime/date\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;,datetime/strtotime\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;,strings/md5\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;,strings/vsprintf\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;.js |tee ./myLocutus &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -vo ./myphp.min.js \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -H &lt;span class=&quot;string&quot;&gt;&#39;Expect: &#39;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --data-urlencode compilation_level=&lt;span class=&quot;string&quot;&gt;&quot;SIMPLE_OPTIMIZATIONS&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --data-urlencode output_format=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --data-urlencode output_info=&lt;span class=&quot;string&quot;&gt;&quot;compiled_code&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --data-urlencode js_code@myLocutus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http://closure-compiler.appspot.com/compile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;but some people think php.js should bundle all of it’s functions into one big file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Not providing an all-in-one, downloadable, minified, ready-to-use&lt;br&gt;.js file is going to kill php.js.&lt;br&gt;You’ve abandoned windows users, and really any non-CLI junkie.&lt;br&gt;While I am capable of compiling this myself, what a headache.&lt;br&gt;You’ve introduced a barrier-to-entry that didn’t exist before,&lt;br&gt;and by not existing, allowed for the following you now have.&lt;br&gt;I &lt;em&gt;highly&lt;/em&gt; suggest that you have this available for download,&lt;br&gt;either here or on github, such that you can keep (and maintain)&lt;br&gt;the momentum you worked so hard for.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’d like to comment on that here. While I appreciate the sentiment, wether the&lt;br&gt;project is being killed by these changes depends on how you look at php.js.&lt;br&gt;To me, php.js is a resource:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For PHP developers that want see how it’s done in JavaScript&lt;/li&gt;
&lt;li&gt;That enables fun experiments&lt;/li&gt;
&lt;li&gt;With a few higher level functions that are incredibly useful, and missing in JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is what I feel php.js should focus on. Making functions. Making them better.&lt;/p&gt;
&lt;p&gt;If - on the other hand - you think of php.js as a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2.1MB, 451-function, ready-to-rock spaceship that you can plug into your website so you can keep typing PHP client-side, not caring about learning JavaScript or how that extra weight might impact the user experience&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;..then yes, &lt;em&gt;these changes are going to kill php.js&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I have limited time to spend on open source, and I want to spend it on things I enjoy and can believe in.&lt;br&gt;Not on working to support use-cases that keep new developers from learning, or make the web slower.&lt;br&gt;I’m sorry if this upsets folks but it really is my free time.&lt;/p&gt;
&lt;p&gt;Luckily though for people with different views, I released php.js under MIT so&lt;br&gt;it’s cool for anybody to fork this project and run with it.&lt;/p&gt;
&lt;p&gt;If anything, knowing that the php.js repository will focus on the raw &lt;code&gt;./functions&lt;/code&gt;&lt;br&gt;makes this easier.&lt;/p&gt;
&lt;p&gt;Best wishes,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hi everybody,&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;/blog/2012/09/26/new-site/&quot;&gt;new site&lt;/a&gt; has no server-side code. Instead&lt;br&gt;we generate HTML &lt;a href=&quot;
    
    </summary>
    
    
      <category term="focus" scheme="http://locutusjs.io/tags/focus/"/>
    
  </entry>
  
  <entry>
    <title>New Site</title>
    <link href="http://locutusjs.io/2012/09/new-site/"/>
    <id>http://locutusjs.io/2012/09/new-site/</id>
    <published>2012-09-26T00:00:00.000Z</published>
    <updated>2016-05-01T10:54:26.000Z</updated>
    
    <content type="html">&lt;p&gt;Hi everybody,&lt;/p&gt;
&lt;p&gt;Welcome to our new site.&lt;br&gt;The old one had a lot of dead weight that nobody used and was basically unmaintained.&lt;/p&gt;
&lt;p&gt;This one is generated by Octopress as plain html, and then stored on Github pages.&lt;/p&gt;
&lt;p&gt;The source to do that is inside the Locutus directory in the &lt;code&gt;_octopress&lt;/code&gt; dir,&lt;br&gt;and freely available.&lt;/p&gt;
&lt;p&gt;For instance, you can now very easily:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kvz/locutus/edit/master/_octopress/source/about/index.markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;edit the about page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kvz/locutus/edit/master/_octopress/source/_posts/2012-09-26-new-site.markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;change this blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kvz/locutus/blob/master/_octopress/source/_includes/custom/navigation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;checkout the navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kvz/locutus/blob/master/_octopress/Rakefile#L30&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;improve the way function pages are built&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, any &lt;a href=&quot;https://github.com/kvz/locutus/graphs/contributors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Locutus contributor&lt;/a&gt;&lt;br&gt;who has &lt;a href=&quot;http://kvz.io/blog/2012/09/25/blog-with-octopress/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Octopress set up&lt;/a&gt;&lt;br&gt;(this mostly involves having the right ruby &amp;amp; gem versions) can then run&lt;br&gt;&lt;code&gt;make site MSG=&amp;quot;describe what you did&amp;quot;&lt;/code&gt; in the&lt;br&gt;project’s root dir to deploy the changes.&lt;/p&gt;
&lt;p&gt;This should make it easy for &lt;a href=&quot;https://github.com/kvz/locutus/graphs/contributors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Locutus contributors&lt;/a&gt;&lt;br&gt;(or any Github user really, using pull requests)&lt;br&gt;to update the site, making it less dependent on few core members, and more a&lt;br&gt;community effort.&lt;/p&gt;
&lt;p&gt;This is also the way I want to do regular Locutus development. Less via comments,&lt;br&gt;more via the power of Github.&lt;/p&gt;
&lt;p&gt;To people wondering where the compiler has gone to, I’m discontinuing that feature.&lt;br&gt;It was more often broken then working, and I think this site should focus on&lt;br&gt;being a simple resource and discussion platform, and not much else.&lt;/p&gt;
&lt;p&gt;Now that everything is open sourced more I think there’s room for anyone to build&lt;br&gt;a better alternative.&lt;/p&gt;
&lt;p&gt;While I’m not actively involved with Locutus anymore, I hope taking this step will&lt;br&gt;make the project ready for the future.&lt;/p&gt;
&lt;p&gt;Best wishes,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/kvz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kevin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hi everybody,&lt;/p&gt;
&lt;p&gt;Welcome to our new site.&lt;br&gt;The old one had a lot of dead weight that nobody used and was basically unmaintained.&lt;/p
    
    </summary>
    
    
      <category term="website" scheme="http://locutusjs.io/tags/website/"/>
    
      <category term="octopress" scheme="http://locutusjs.io/tags/octopress/"/>
    
      <category term="future" scheme="http://locutusjs.io/tags/future/"/>
    
  </entry>
  
</feed>
